function r(r){return!Number.isNaN(parseFloat(r))}function t(r,t){const n=r.shadowRoot.querySelector("slot").assignedNodes();return null!==t?Array.from(n).filter((r=>r.nodeName.toLowerCase()===t)):Array.from(n)}function n(r){return 1===r?"":"s"}function e(r,t){if(void 0===r)return`${t} character${n(t)} allowed`;let e;if(r.length<=t){const a=t-r.length;e=`${a} character${n(a)} left`}else{const a=r.length-t;e=`${a} character${n(a)} over limit`}return e}function a(r,t){return Array.from({length:t-r+1},((t,n)=>r+n))}export{e as a,t as g,r as i,a as m}